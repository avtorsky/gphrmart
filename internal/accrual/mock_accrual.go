// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/accrual/accrual.go

// Package accrual is a generated GoMock package.
package accrual

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAccrualer is a mock of Accrualer interface.
type MockAccrualer struct {
	ctrl     *gomock.Controller
	recorder *MockAccrualerMockRecorder
}

// MockAccrualerMockRecorder is the mock recorder for MockAccrualer.
type MockAccrualerMockRecorder struct {
	mock *MockAccrualer
}

// NewMockAccrualer creates a new mock instance.
func NewMockAccrualer(ctrl *gomock.Controller) *MockAccrualer {
	mock := &MockAccrualer{ctrl: ctrl}
	mock.recorder = &MockAccrualerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccrualer) EXPECT() *MockAccrualerMockRecorder {
	return m.recorder
}

// GetOrderInfo mocks base method.
func (m *MockAccrualer) GetOrderInfo(orderID string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrderInfo", orderID)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrderInfo indicates an expected call of GetOrderInfo.
func (mr *MockAccrualerMockRecorder) GetOrderInfo(orderID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderInfo", reflect.TypeOf((*MockAccrualer)(nil).GetOrderInfo), orderID)
}
